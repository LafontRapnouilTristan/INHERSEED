---
title: "Greenhouse experiment - WP1&2"
format: html
editor: visual
---

```{r set}
#| message: false
#| include: false
library(tidyverse)
library(rtry)
```

# G0

Seeds from XX species were bought from different seed producers. Here is a table listing seed species and origin: [INSERT TABLE]()

We compiled as much information as possible regarding these species and their seeds. First we looked in the TRY database for available information on these species [REF TRY SECTION](). Additionally, we performed multiple test and measurements on these seeds: \* Macroscopy and measurements using TRAITOR (REF) [REF MACROSCOPE/TRAITOR SECTION]() \* Tomography \* Picnometry \* Mass measurements \* Chemistry

### TRY

First we identified a set of traits that may be found on the [TRY database](https://www.try-db.org/) [@kattge2019]. TRY requires manual requests and we used R to prepare our requests.

#### Request

First check if our species have entries in TRY. Run this only the first time to get the list of TRY species:

```{r}
#| message: false
# download.file('https://try-db.org/dnld/TryAccSpecies.txt', destfile = "data/TRY/TryAccSpecies.tsv", method = "wget", extra = "-r -p --random-wait", quiet = T)
```

Then look for our species:

```{r}
#| message: false
#get our species list
species_list <- readr::read_tsv("data/species_list_INHERSEED.tsv")
#check overlap and merge
try_sp <- species_list %>%
  rename(scientific_cleaned = species_for_tree)%>%
  select(scientific_cleaned) %>%
  mutate(scientific_cleaned=ifelse(scientific_cleaned=="Legousia veneris","Legousia speculum-veneris",scientific_cleaned))%>% #rename that species properly
  na.omit() %>%
  unique() %>%
  left_join(readr::read_tsv("data/TRY/TryAccSpecies.txt"),
            by = c("scientific_cleaned" = "AccSpeciesName")
  )
```

```{r}
#| label: fig-speciesinTRY
#| fig-cap: "Number of our species with values for selected traits in TRY."
try_sp%>%
  mutate(is_in_try=ifelse(is.na(AccSpeciesID),"Not in TRY","In Try"))%>%
  ggplot(aes(x=is_in_try,fill=is_in_try))+
  geom_bar(stat = "count")+
  theme_minimal()+
  ylab("Number of species")+
  xlab("")+
  theme(legend.position = "none",
        text = element_text(face="bold"))+
  ggtitle(paste0(sum(!is.na(try_sp$AccSpeciesID))," species out of ", nrow(try_sp)," are in TRY"))
```

Now we can build a request for TRY with our traits of interest. We handpicked from TRY traits list XX traits that were relevant to us.

```{r}
try_request <- try_sp%>%
  summarise(species_list=paste0(AccSpeciesID,collapse = ", "))
try_request%>%
  readr::write_tsv("data/TRY/requests/TryReqSpecies.tsv")

traits_try <- readxl::read_xlsx("data/TRY/traits_of_interest/Traits repro TRY database.xlsx")
try_request_traits <- traits_try%>%
  filter(tokeep=="y")%>%
  select(TraitID)%>%
  summarise(traits_list=paste0(TraitID,collapse = ", "))
try_request_traits%>%
  readr::write_tsv("data/TRY/requests/TryReqTraits.tsv")
# 41259 - ID of the first request
```

We requested TRY data access using our species and traits lists.

#### Release

Check for all the traits the number of value (e.g., species) we have.

```{r}
#| message: false
#| warning: false
try_release <- readr::read_tsv("data/TRY/release/41259_1905202519280_TRY_relaease/41259.txt")
try_release %<>%
  select(AccSpeciesName, TraitName, StdValue) %>%
  rename(
    species = AccSpeciesName,
    trait = TraitName,
    value = StdValue
  ) %>%
  group_by(species, trait) %>%
  summarise(value = mean(as.numeric(value), na.rm = TRUE)) %>%
  tidyr::pivot_wider(values_from = "value", names_from = "trait")%>%
  mutate(across(everything(),~ifelse(.x=="NaN",NA,.x)))
```

```{r}
#| label: fig-traitsinTRY
#| fig-cap: "% of our species for which we have a value."
try_release%>%
  reshape2::melt(id.vars=c("species"))%>%
  group_by(variable)%>%
  mutate(is_na_var=ifelse(is.na(value),0,1))%>%
  summarise(pct_species_avail=(sum(is_na_var)/82)*100)%>%
  ggplot(aes(x=pct_species_avail,y=variable))+
  geom_point()+
  theme_minimal()
```

Write the list of traits to a new file.

```{r}
try_release%>%
  reshape2::melt(id.vars=c("species"))%>%
  group_by(variable)%>%
  mutate(is_na_var=ifelse(is.na(value),0,1))%>%
  summarise(pct_species_avail=(sum(is_na_var)/82)*100)%>%
  filter(pct_species_avail>0)%>%
  readr::write_tsv("data/TRY/release/traits_with_some_values.tsv")
```

## Macroscopy

#### Protocols

#### Image processing

## Tomography

## Picnometry

## Mass measruements

# P1

# G1

# P2
